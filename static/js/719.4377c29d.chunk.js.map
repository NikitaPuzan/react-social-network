{"version":3,"file":"static/js/719.4377c29d.chunk.js","mappings":"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","sources":["webpack://first-project/./src/components/Pages/Profile/MyPost/MyPosts.module.css?fecb","webpack://first-project/./src/components/Pages/Profile/MyPost/Post/Post.module.css?2aac","components/Pages/Profile/MyPost/Post/Post.jsx","components/Pages/Profile/MyPost/MyPosts.jsx","components/Pages/Profile/MyPost/MyPostsContainer.jsx","webpack://first-project/./src/components/Pages/Profile/ProfileInfo/ProfileInfo.module.css?c7e9","components/Pages/Profile/ProfileInfo/ProfileStatus.jsx","components/Pages/Profile/ProfileInfo/ProfileInfo.jsx","components/Pages/Profile/Profile.jsx","components/Pages/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__zeFW8\",\"posts\":\"MyPosts_posts__yhBft\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__wqHBA\"};","import React from 'react'\nimport style from \"./Post.module.css\"\n\nconst Post = (props) => {\n  return (\n      <div className={style.item}>\n        <img src=\"https://i.pinimg.com/736x/f5/27/41/f52741fb62bf1d821948a49204406bdc.jpg\" alt=\"\"/>\n        {props.message}\n      </div>\n  )\n}\n\nexport default Post\n","import React from 'react';\nimport style from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {Button, TextField} from \"@mui/material\";\nimport * as yup from 'yup'\nimport {useFormik} from 'formik';\n\nconst MyPosts = React.memo((props) => {\n  let postElements = props.postData.map(el => <Post message={el.text} key={el.id}/>)\n  return (\n    <div>\n      <div className={style.postsBlock}>\n        <h3>My posts</h3>\n        <AddPostsForm addPost={props.addPost} />\n        <div className={style.posts}>\n          {postElements}\n        </div>\n      </div>\n    </div>\n  );\n})\n\nconst AddPostsForm = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      postText: '',\n    },\n    validationSchema: yup.object({\n      postText: yup.string('')\n        .required('Text is required')\n        .max(40, 'Maximum 40 characters length'),\n    }),\n    onSubmit: (values) => {\n      props.addPost(values.postText)\n    }\n  });\n\n  return (\n        <form onSubmit={formik.handleSubmit}>\n          <TextField\n            id=\"outlined-multiline-flexible\"\n            name=\"postText\"\n            value={formik.values.postText}\n            onChange={formik.handleChange}\n            error={formik.touched.postText && Boolean(formik.errors.postText)}\n            helperText={formik.touched.postText && formik.errors.postText}\n          />\n          <br/>\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">Send</Button>\n        </form>\n  )\n}\n\nexport default MyPosts;\n","import React from 'react';\nimport {addPostActionCreator} from \"../../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n  return {\n    postData: state.profilePage.postData,\n  }\n}\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText))\n    }\n  }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2mJ6k\",\"profileBackground\":\"ProfileInfo_profileBackground__v7dEO\",\"item\":\"ProfileInfo_item__GdXSm\"};","import React, {useEffect, useState} from 'react'\n\nconst ProfileStatus = (props) => {\n  const [editMode, setEditMode] = useState(false)\n  const [status, setStatus] = useState(props.status)\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode( true)\n}\n  const deactivateEditMode = () => {\n    setEditMode( false)\n    props.updateStatus(status)\n  }\n\n  const onStatusChanged = (e) => {\n    setStatus(e.currentTarget.value)\n  }\n\n  return <>\n    {!editMode &&\n      <div>\n        <span onDoubleClick={activateEditMode}>{status || 'no status'}</span>\n      </div>}\n    {editMode && <div>\n      <input onChange={onStatusChanged} autoFocus={true}\n             onBlur={deactivateEditMode} value={status}/>\n    </div>}\n  </>\n}\n\nexport default ProfileStatus;\n\n//\n//\n// componentDidUpdate(prevProps, prevState)\n// {\n//   if (prevProps.status !== props.status) {\n//     setState({\n//       status: props.status\n//     })\n//   }\n// }\n","import React from 'react';\nimport style from './ProfileInfo.module.css'\nimport ProfileStatus from \"./ProfileStatus\";\n\n\nconst ProfileInfo = (props) => {\n  return (\n    <div>\n      <div className={style.profileBackground}>\n        <img\n          src=\"https://static3.depositphotos.com/1000454/256/i/600/depositphotos_2567474-stock-photo-wide-panorama-of-french-alps.jpg\"\n          alt=\"\"/>\n      </div>\n      <div className={style.descriptionBlock}>\n        <div className={style.item}>\n          <img src=\"https://i.pinimg.com/736x/f5/27/41/f52741fb62bf1d821948a49204406bdc.jpg\" alt=\"\"/>\n          <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\nimport MyPostsContainer from \"./MyPost/MyPostsContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport Preloader from \"../../common/Preloader/Preloader\";\n\nconst Profile = (props) => {\n  if(!props.profile){\n    return (<Preloader />)\n  }\n\n  return (\n    <div>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n      <MyPostsContainer/>\n    </div>\n  )\n}\nexport default Profile","import React, {Component} from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../../redux/profile-reducer\";\nimport {useParams } from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends Component {\n\n  componentDidMount() {\n    let userId = this.props.params.userId\n    if(!userId) {\n      userId = this.props.authorizedUserId\n    }\n    this.props.getUserProfile(userId)\n    this.props.getUserStatus(userId)\n  }\n\n  render() {\n    return (\n        <Profile {...this.props} profile={this.props.profile}\n                 status={this.props.status}\n                 updateStatus={this.props.updateUserStatus}/>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n})\n\nconst withRouter = WrappedComponent => props => {\n  const params = useParams();\n  return (\n    <WrappedComponent {...props} params={params} />\n  )\n}\n\nexport default compose(\n  connect(mapStateToProps,{ getUserProfile, getUserStatus, updateUserStatus}),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer)\n\n\n\n\n"],"names":["props","className","style","src","alt","message","MyPosts","React","postElements","postData","map","el","text","id","AddPostsForm","addPost","formik","useFormik","initialValues","postText","validationSchema","yup","required","max","onSubmit","values","handleSubmit","TextField","name","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","color","variant","type","connect","state","profilePage","dispatch","newPostText","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","e","currentTarget","autoFocus","onBlur","updateStatus","profile","MyPostsContainer","Preloader","ProfileContainer","userId","this","params","authorizedUserId","getUserProfile","getUserStatus","updateUserStatus","Component","compose","auth","isAuth","WrappedComponent","useParams","withAuthRedirect"],"sourceRoot":""}